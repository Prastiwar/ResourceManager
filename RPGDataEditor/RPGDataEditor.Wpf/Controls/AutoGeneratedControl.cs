using RPGDataEditor.Core;
using System.Reflection;
using System.Windows;
using System.Windows.Controls;

namespace RPGDataEditor.Wpf.Controls
{
    public class AutoGeneratedControl : UserControl
    {
        public AutoGeneratedControl() => DataContextChanged += OnDataContextChanged;

        protected virtual void OnDataContextChanged(object sender, DependencyPropertyChangedEventArgs e)
        {
            ClearContent();
            CreateContent();
        }

        protected virtual void ClearContent() => Content = null;

        protected virtual void CreateContent()
        {
            if (DataContext == null)
            {
                return;
            }
            DependencyObject root = CreateRoot();
            if (root is Panel panel)
            {
                PropertyInfo[] properties = DataContext.GetType().GetProperties();
                foreach (PropertyInfo property in properties)
                {
                    DependencyObject control = CreateControl(property);
                    if (control is UIElement element)
                    {
                        panel.Children.Add(element);
                    }
                }
            }
        }

        protected virtual DependencyObject CreateRoot() => new Grid();

        protected virtual DependencyObject CreateControl(PropertyInfo property)
        {
            ControlGenerateTemplate template = Application.Current.TryResolve<ControlGenerateTemplate>();
            return template.LoadContent();
        }
    }
}
