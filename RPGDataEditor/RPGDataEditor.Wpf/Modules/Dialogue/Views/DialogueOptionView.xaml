<UserControl x:Class="RPGDataEditor.Wpf.Dialogue.Views.DialogueOptionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:behaviors="clr-namespace:RPGDataEditor.Wpf.Behaviors"
             xmlns:local="clr-namespace:RPGDataEditor.Wpf"
             xmlns:controls="clr-namespace:RPGDataEditor.Wpf.Controls"
             mc:Ignorable="d"
             d:DesignHeight="450"
             d:DesignWidth="800"
             x:Name="This">
    <StackPanel x:Name="MainPanel">
        <StackPanel>
            <ComboBox x:Name="TypeComboBox"
                      materialDesign:HintAssist.Hint="Type"
                      HorizontalAlignment="Stretch"
                      HorizontalContentAlignment="Stretch"
                      SelectedIndex="2"
                      Margin="5"
                      Style="{DynamicResource MaterialDesignFloatingHintComboBox}">
                <ComboBoxItem Name="Dialogue"
                              Content="Dialogue" />
                <ComboBoxItem Name="TriggerJob"
                              Content="Trigger Job" />
                <ComboBoxItem Name="Quit"
                              Content="Quit" />
            </ComboBox>
            <controls:ResourcePicker x:Name="DialogueOptionPanel"
                                     Resource="Dialogue"
                                     PickedId="{Binding NextDialogId, Mode=TwoWay}"
                                     Margin="5"
                                     Visibility="Collapsed" />
            <TextBox Text="{Binding Message, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Margin="5"
                     local:AttachProperties.ValidablePathFormat="Options[{0}]"
                     materialDesign:HintAssist.Hint="Message"
                     Style="{DynamicResource MaterialDesignFloatingHintTextBox}">
                <local:AttachProperties.ValidablePathValues>
                    <MultiBinding Converter="{StaticResource BindingListConverter}">
                        <Binding Path="(ItemsControl.AlternationIndex)"
                                 RelativeSource="{RelativeSource AncestorType={x:Type ListBoxItem}}" />
                    </MultiBinding>
                </local:AttachProperties.ValidablePathValues>
                <i:Interaction.Behaviors>
                    <behaviors:CatchValidationBehavior />
                </i:Interaction.Behaviors>
            </TextBox>
            <TextBox Text="{Binding Command, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Margin="5"
                     materialDesign:HintAssist.Hint="Command"
                     Style="{DynamicResource MaterialDesignFloatingHintTextBox}">
                <i:Interaction.Behaviors>
                    <behaviors:CatchValidationBehavior />
                </i:Interaction.Behaviors>
            </TextBox>
        </StackPanel>
        <StackPanel Orientation="Horizontal"
                    Margin="5">
            <TextBlock Text="Color: "
                       VerticalAlignment="Top"
                       Margin="5,10,5,5" />
            <controls:MaterialColorPicker Margin="5"
                                          Color="{Binding Color, Mode=TwoWay, Converter={StaticResource HexDecColorConverter}}" />
        </StackPanel>
        <materialDesign:Card HorizontalAlignment="Stretch"
                             HorizontalContentAlignment="Center"
                             Margin="5"
                             Padding="5">
            <StackPanel>
                <StackPanel Orientation="Horizontal">
                    <controls:ExpandButton ExpandableElement="{x:Reference RequirementsListView}" />
                    <Button Click="AddRequirement"
                            Style="{DynamicResource AddFlatButtonStyle}" />
                    <TextBlock Text="{Binding ItemsSource.Count, ElementName=RequirementsListView, StringFormat='({0}) Requirements'}"
                               Margin="5" />
                </StackPanel>
                <ListView x:Name="RequirementsListView"
                          ItemsSource="{Binding Requirements}"
                          HorizontalAlignment="Stretch"
                          AlternationCount="{StaticResource MaxIntValue}"
                          HorizontalContentAlignment="Stretch">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <materialDesign:Card HorizontalAlignment="Stretch"
                                                 HorizontalContentAlignment="Center"
                                                 Padding="5">
                                <Grid HorizontalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Button Click="RemoveRequirement"
                                            CommandParameter="{Binding .}"
                                            VerticalAlignment="Top"
                                            Margin="0,12,0,0"
                                            Style="{StaticResource DeleteFlatButtonStyle}" />
                                    <!-- TODO: Review if this view should know that it belongs to only "Options" member name -->
                                    <controls:RequirementView DataContext="{Binding .}"
                                                              TypeChange="RequirementView_TypeChange"
                                                              local:AttachProperties.ValidablePathFormat="Options[{0}].Requirements[{1}]"
                                                              local:AttachProperties.ValidableObject="{Binding DataContext, ElementName=RequirementsListView}"
                                                              Grid.Column="1"
                                                              HorizontalAlignment="Stretch"
                                                              HorizontalContentAlignment="Stretch">
                                        <local:AttachProperties.ValidablePathValues>
                                            <MultiBinding Converter="{StaticResource BindingListConverter}">
                                                <Binding Path="(ItemsControl.AlternationIndex)"
                                                         RelativeSource="{RelativeSource AncestorType={x:Type ListBoxItem}, AncestorLevel=2}" />
                                                <Binding Path="(ItemsControl.AlternationIndex)"
                                                         RelativeSource="{RelativeSource AncestorType={x:Type ListBoxItem}}" />
                                            </MultiBinding>
                                        </local:AttachProperties.ValidablePathValues>
                                    </controls:RequirementView>
                                </Grid>
                            </materialDesign:Card>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </StackPanel>
        </materialDesign:Card>
    </StackPanel>
</UserControl>
