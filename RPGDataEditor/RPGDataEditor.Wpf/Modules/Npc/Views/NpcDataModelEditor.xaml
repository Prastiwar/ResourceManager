<UserControl x:Class="RPGDataEditor.Wpf.Npc.Views.NpcDataModelEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:behaviors="clr-namespace:RPGDataEditor.Wpf.Behaviors"
             xmlns:local="clr-namespace:RPGDataEditor.Wpf"
             xmlns:converters="clr-namespace:RPGDataEditor.Wpf.Converters"
             xmlns:models="clr-namespace:RPGDataEditor.Core.Models;assembly=RPGDataEditor.Core"
             xmlns:controls="clr-namespace:RPGDataEditor.Wpf.Controls"
             Style="{DynamicResource DefaultEditorControl}"
             x:Name="ThisNpcView">
    <StackPanel Margin="10">
        <TextBox DataContext="{Binding Model}"
                 Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 Margin="5"
                 materialDesign:HintAssist.Hint="Name"
                 Style="{DynamicResource MaterialDesignFloatingHintTextBox}">
            <i:Interaction.Behaviors>
                <behaviors:CatchValidationBehavior />
            </i:Interaction.Behaviors>
        </TextBox>
        <TextBox DataContext="{Binding Model}"
                 Text="{Binding Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 Margin="5"
                 materialDesign:HintAssist.Hint="Title"
                 Style="{DynamicResource MaterialDesignFloatingHintTextBox}">
            <i:Interaction.Behaviors>
                <behaviors:CatchValidationBehavior />
            </i:Interaction.Behaviors>
        </TextBox>
        <TextBox DataContext="{Binding Model}"
                 Text="{Binding TextureLocation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 Margin="5"
                 materialDesign:HintAssist.Hint="Texture"
                 Style="{DynamicResource MaterialDesignFloatingHintTextBox}">
            <i:Interaction.Behaviors>
                <behaviors:CatchValidationBehavior />
            </i:Interaction.Behaviors>
        </TextBox>
        <materialDesign:Card HorizontalAlignment="Stretch"
                             HorizontalContentAlignment="Center"
                             Margin="5"
                             Padding="5">
            <StackPanel>
                <TextBlock Text="Spawn location" />
                <controls:BlockPosField DataContext="{Binding Model}"
                                        Position="{Binding Position, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        Orientation="Horizontal"
                                        Margin="-2" />
            </StackPanel>
        </materialDesign:Card>
        <CheckBox x:Name="InvulnerableCheckbox"
                  Margin="5"
                  Content="Invulnerable"
                  DataContext="{Binding Model}"
                  IsChecked="{Binding Invulnerable}" />
        <CheckBox x:Name="LookAtPlayerCheckbox"
                  Margin="5"
                  Content="Look At Player"
                  DataContext="{Binding Model}"
                  IsChecked="{Binding LookAtPlayer}" />
        <controls:ListDataCard x:Name="MovementListDataCard"
                               DataContext="{Binding Model}"
                               AddItemCommand="{Binding DataContext.AddPathCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                               ItemsSource="{Binding Paths}"
                               NoExpandableVisibility="False"
                               IsExpandable="{Binding IsReadOnly,ElementName=MovementListDataCard, Converter={StaticResource BoolToInvertBoolConverter}}"
                               IsReadOnly="{Binding MovementType, Converter={StaticResource InvertStringToBoolConverter}, ConverterParameter='PATH'}">
            <controls:ListDataCard.HeaderTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{Binding ItemsSource.Count, ElementName=PathListView, StringFormat='({0})'}"
                                   VerticalAlignment="Bottom"
                                   Margin="5,2,2,5" />
                        <ComboBox x:Name="MovementTypeComboBox"
                                  Grid.Column="1"
                                  Margin="10,-2,0,0"
                                  DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=controls:ListDataCard}}"
                                  SelectedItem="{Binding MovementType}"
                                  materialDesign:HintAssist.Hint="Movement Type"
                                  ItemsSource="{Binding Source={converters:EnumBindingSource {x:Type models:NpcMovement}}}"
                                  Style="{DynamicResource MaterialDesignFloatingHintComboBox}" />
                    </Grid>
                </DataTemplate>
            </controls:ListDataCard.HeaderTemplate>
            <DataTemplate>
                <controls:BlockPosField Position="{Binding .}"
                                        HorizontalAlignment="Stretch"
                                        HorizontalContentAlignment="Stretch" />
            </DataTemplate>
        </controls:ListDataCard>
        <materialDesign:Card x:Name="ExpandableJobSection"
                             HorizontalAlignment="Stretch"
                             HorizontalContentAlignment="Center"
                             Margin="5"
                             Padding="5">
            <StackPanel>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <controls:ExpandButton HorizontalAlignment="Left"
                                           IsEnabled="{Binding SelectedIndex, ElementName=JobComboBox, Mode=OneWay, Converter={StaticResource InvertStringToBoolConverter}, ConverterParameter=0}"
                                           ExpandableElement="{x:Reference JobStackPanel}" />
                    <ComboBox x:Name="JobComboBox"
                              Grid.Column="1"
                              Margin="10,-2,0,0"
                              DataContext="{Binding Model}"
                              DataContextChanged="JobComboBox_DataContextChanged"
                              SelectionChanged="JobComboBox_SelectionChanged"
                              materialDesign:HintAssist.Hint="Job Type"
                              Style="{DynamicResource MaterialDesignFloatingHintComboBox}">
                        <ComboBoxItem Name="NONE"
                                      Content="NONE" />
                        <ComboBoxItem Name="GUARD"
                                      Content="GUARD" />
                        <ComboBoxItem Name="TRADER"
                                      Content="TRADER" />
                    </ComboBox>
                </Grid>
                <StackPanel x:Name="JobStackPanel"
                            Visibility="Collapsed">
                    <StackPanel x:Name="GuardStackPanel"
                                Visibility="Collapsed" />
                    <StackPanel x:Name="TraderStackPanel"
                                Visibility="Collapsed">
                        <controls:ListDataCard x:Name="TradeItemsListCard"
                                               DataContext="{Binding Model.Job}"
                                               ItemsSource="{Binding Items}"
                                               HeaderText="{Binding Items.Count, StringFormat='({0}) Items'}"
                                               AddItemCommand="{Binding DataContext.AddTradeItemCommand, RelativeSource={RelativeSource AncestorType=StackPanel}}">
                            <DataTemplate>
                                <materialDesign:Card HorizontalAlignment="Stretch"
                                                     Margin="5"
                                                     Padding="5">
                                    <StackPanel>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <controls:ExpandButton Margin="3,0,3,5"
                                                                   HorizontalAlignment="Left"
                                                                   VerticalAlignment="Bottom"
                                                                   ExpandableElement="{x:Reference TradeItemPanel}" />
                                            <TextBlock Text="{Binding Item}"
                                                       Grid.Column="2"
                                                       VerticalAlignment="Bottom"
                                                       Margin="5,2,2,5" />
                                        </Grid>
                                        <StackPanel x:Name="TradeItemPanel"
                                                    Visibility="Collapsed">
                                            <TextBox Text="{Binding Item, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                     Margin="5"
                                                     materialDesign:HintAssist.Hint="Item resource location"
                                                     Style="{DynamicResource MaterialDesignFloatingHintTextBox}">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:CatchValidationBehavior />
                                                </i:Interaction.Behaviors>
                                            </TextBox>
                                            <TextBox Text="{Binding Buy, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                     InputScope="Number"
                                                     Margin="5"
                                                     materialDesign:HintAssist.Hint="Buy price"
                                                     Style="{DynamicResource MaterialDesignFloatingHintTextBox}">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:NumericFieldBehaviour EmptyValue="0" />
                                                </i:Interaction.Behaviors>
                                            </TextBox>
                                            <TextBox Text="{Binding Sell, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                     InputScope="Number"
                                                     Margin="5"
                                                     materialDesign:HintAssist.Hint="Sell price"
                                                     Style="{DynamicResource MaterialDesignFloatingHintTextBox}">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:NumericFieldBehaviour EmptyValue="0" />
                                                </i:Interaction.Behaviors>
                                            </TextBox>
                                            <TextBox Text="{Binding Count, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                     InputScope="Number"
                                                     Margin="5"
                                                     materialDesign:HintAssist.Hint="Count"
                                                     Style="{DynamicResource MaterialDesignFloatingHintTextBox}">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:NumericFieldBehaviour EmptyValue="1" />
                                                </i:Interaction.Behaviors>
                                            </TextBox>
                                            <TextBox Text="{Binding Nbt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                     Margin="5"
                                                     materialDesign:HintAssist.Hint="NBT"
                                                     Style="{DynamicResource MaterialDesignFloatingHintTextBox}">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:CatchValidationBehavior />
                                                </i:Interaction.Behaviors>
                                            </TextBox>
                                        </StackPanel>
                                    </StackPanel>
                                </materialDesign:Card>
                            </DataTemplate>
                        </controls:ListDataCard>
                    </StackPanel>
                </StackPanel>
            </StackPanel>
        </materialDesign:Card>
        <ContentControl ContentStringFormat="Attributes"
                        ContentTemplate="{DynamicResource ExpandableCardTemplate}">
            <StackPanel>
                <TextBox DataContext="{Binding Model}"
                         Text="{Binding HealthRegen, StringFormat={}{0:0.0#}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Margin="5"
                         InputScope="Number"
                         materialDesign:HintAssist.Hint="Health Regeneration"
                         Style="{DynamicResource MaterialDesignFloatingHintTextBox}">
                    <i:Interaction.Behaviors>
                        <behaviors:NumericFieldBehaviour EmptyValue="0.0"
                                                         IsPrecise="true" />
                    </i:Interaction.Behaviors>
                </TextBox>
                <TextBox x:Name="MaxHealthTextBox"
                         Text="{Binding MaxHealth, StringFormat={}{0:0.0#}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Margin="5"
                         InputScope="Number"
                         materialDesign:HintAssist.Hint="Max Health"
                         Style="{DynamicResource MaterialDesignFloatingHintTextBox}">
                    <i:Interaction.Behaviors>
                        <behaviors:NumericFieldBehaviour EmptyValue="0.0"
                                                         IsPrecise="true" />
                    </i:Interaction.Behaviors>
                </TextBox>
                <TextBox x:Name="RespawnTimeTextBox"
                         Text="{Binding RespawnTime, StringFormat={}{0:0.0#}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Margin="5"
                         InputScope="Number"
                         materialDesign:HintAssist.Hint="Respawn Time"
                         Style="{DynamicResource MaterialDesignFloatingHintTextBox}">
                    <i:Interaction.Behaviors>
                        <behaviors:NumericFieldBehaviour EmptyValue="0"
                                                         IsPrecise="true" />
                    </i:Interaction.Behaviors>
                </TextBox>
                <TextBox x:Name="MovementSpeedTextBox"
                         Text="{Binding MovementSpeed, StringFormat={}{0:0.0#}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Margin="5"
                         InputScope="Number"
                         materialDesign:HintAssist.Hint="Movement Speed"
                         Style="{DynamicResource MaterialDesignFloatingHintTextBox}">
                    <i:Interaction.Behaviors>
                        <behaviors:NumericFieldBehaviour EmptyValue="0"
                                                         IsPrecise="true" />
                    </i:Interaction.Behaviors>
                </TextBox>
                <TextBox x:Name="AttackDamageTextBox"
                         Text="{Binding AttackDamage, StringFormat={}{0:0.0#}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Margin="5"
                         InputScope="Number"
                         materialDesign:HintAssist.Hint="Attack Damage"
                         Style="{DynamicResource MaterialDesignFloatingHintTextBox}">
                    <i:Interaction.Behaviors>
                        <behaviors:NumericFieldBehaviour EmptyValue="0"
                                                         IsPrecise="true" />
                    </i:Interaction.Behaviors>
                </TextBox>
                <TextBox x:Name="AttackKnockbackTextBox"
                         Text="{Binding AttackKnockback, StringFormat={}{0:0.0#}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Margin="5"
                         InputScope="Number"
                         materialDesign:HintAssist.Hint="Attack Knockback"
                         Style="{DynamicResource MaterialDesignFloatingHintTextBox}">
                    <i:Interaction.Behaviors>
                        <behaviors:NumericFieldBehaviour EmptyValue="0"
                                                         IsPrecise="true" />
                    </i:Interaction.Behaviors>
                </TextBox>
                <TextBox x:Name="AttackSpeedTextBox"
                         Text="{Binding AttackSpeed, StringFormat={}{0:0.0#}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Margin="5"
                         InputScope="Number"
                         materialDesign:HintAssist.Hint="Attack Speed"
                         Style="{DynamicResource MaterialDesignFloatingHintTextBox}">
                    <i:Interaction.Behaviors>
                        <behaviors:NumericFieldBehaviour EmptyValue="0"
                                                         IsPrecise="true" />
                    </i:Interaction.Behaviors>
                </TextBox>
                <TextBox x:Name="ArmorTextBox"
                         Text="{Binding Armor, StringFormat={}{0:0.0#}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Margin="5"
                         InputScope="Number"
                         materialDesign:HintAssist.Hint="Armor"
                         Style="{DynamicResource MaterialDesignFloatingHintTextBox}">
                    <i:Interaction.Behaviors>
                        <behaviors:NumericFieldBehaviour EmptyValue="0"
                                                         IsPrecise="true" />
                    </i:Interaction.Behaviors>
                </TextBox>
                <TextBox x:Name="ArmorToughnessTextBox"
                         Text="{Binding ArmorToughness, StringFormat={}{0:0.0#}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Margin="5"
                         InputScope="Number"
                         materialDesign:HintAssist.Hint="Armor Toughness"
                         Style="{DynamicResource MaterialDesignFloatingHintTextBox}">
                    <i:Interaction.Behaviors>
                        <behaviors:NumericFieldBehaviour EmptyValue="0"
                                                         IsPrecise="true" />
                    </i:Interaction.Behaviors>
                </TextBox>
                <TextBox x:Name="KnockbackResistanceTextBox"
                         Text="{Binding KnockbackResistance, StringFormat={}{0:0.0#}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Margin="5"
                         InputScope="Number"
                         materialDesign:HintAssist.Hint="Knockback Resistance"
                         Style="{DynamicResource MaterialDesignFloatingHintTextBox}">
                    <i:Interaction.Behaviors>
                        <behaviors:NumericFieldBehaviour EmptyValue="0"
                                                         IsPrecise="true" />
                    </i:Interaction.Behaviors>
                </TextBox>
            </StackPanel>
        </ContentControl>
        <ContentControl ContentStringFormat="Equipment"
                        ContentTemplate="{DynamicResource ExpandableCardTemplate}">
            <StackPanel x:Name="EquipmentPanel"
                        DataContext="{Binding Model}">
                <TextBox DataContext="{Binding Equipment}"
                         Text="{Binding MainHand, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Margin="5"
                         materialDesign:HintAssist.Hint="Main Hand"
                         Style="{DynamicResource MaterialDesignFloatingHintTextBox}" />
                <TextBox DataContext="{Binding Equipment}"
                         Text="{Binding OffHand, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Margin="5"
                         materialDesign:HintAssist.Hint="Off Hand"
                         Style="{DynamicResource MaterialDesignFloatingHintTextBox}" />
                <TextBox DataContext="{Binding Equipment}"
                         Text="{Binding Head, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Margin="5"
                         materialDesign:HintAssist.Hint="Head"
                         Style="{DynamicResource MaterialDesignFloatingHintTextBox}" />
                <TextBox DataContext="{Binding Equipment}"
                         Text="{Binding Chest, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Margin="5"
                         materialDesign:HintAssist.Hint="Chest"
                         Style="{DynamicResource MaterialDesignFloatingHintTextBox}" />
                <TextBox DataContext="{Binding Equipment}"
                         Text="{Binding Legs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Margin="5"
                         materialDesign:HintAssist.Hint="Legs"
                         Style="{DynamicResource MaterialDesignFloatingHintTextBox}" />
                <TextBox DataContext="{Binding Equipment}"
                         Text="{Binding Feet, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Margin="5"
                         materialDesign:HintAssist.Hint="Feet"
                         Style="{DynamicResource MaterialDesignFloatingHintTextBox}" />
            </StackPanel>
        </ContentControl>
        <ContentControl ContentStringFormat="Dialogues"
                        ContentTemplate="{DynamicResource ExpandableCardTemplate}">
            <StackPanel x:Name="ListsPanel"
                        DataContext="{Binding Model}"
                        Tag="{Binding DataContext.AddTalkLineCommand, RelativeSource={RelativeSource AncestorType=UserControl}}">
                <StackPanel.Resources>
                    <DataTemplate x:Key="TalkLineTemplate">
                        <StackPanel Orientation="Horizontal">
                            <TextBox Text="{Binding Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     Margin="5"
                                     materialDesign:HintAssist.Hint="Talk Text"
                                     Style="{DynamicResource MaterialDesignFloatingHintTextBox}">
                                <i:Interaction.Behaviors>
                                    <behaviors:CatchValidationBehavior />
                                </i:Interaction.Behaviors>
                            </TextBox>
                            <TextBox Margin="5"
                                     Text="{Binding Path=SoundLocation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     materialDesign:HintAssist.Hint="Sound Location"
                                     Style="{DynamicResource MaterialDesignFloatingHintTextBox}">
                                <i:Interaction.Behaviors>
                                    <behaviors:CatchValidationBehavior />
                                </i:Interaction.Behaviors>
                            </TextBox>
                        </StackPanel>
                    </DataTemplate>
                    <Style TargetType="{x:Type controls:ListDataCard}"
                           BasedOn="{StaticResource {x:Type controls:ListDataCard}}"
                           x:Key="TalkLineListStyle">
                        <Setter Property="DataContext"
                                Value="{Binding TalkData}" />
                        <Setter Property="AddItemCommand"
                                Value="{Binding Tag, ElementName=ListsPanel}" />
                        <Setter Property="ItemContentTemplate"
                                Value="{StaticResource TalkLineTemplate}" />
                    </Style>
                </StackPanel.Resources>
                <TextBox DataContext="{Binding TalkData}"
                         Text="{Binding TalkRange, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Margin="5"
                         InputScope="Number"
                         materialDesign:HintAssist.Hint="Talk Range"
                         Style="{DynamicResource MaterialDesignFloatingHintTextBox}">
                    <i:Interaction.Behaviors>
                        <behaviors:NumericFieldBehaviour EmptyValue="0" />
                    </i:Interaction.Behaviors>
                </TextBox>
                <controls:ListDataCard ItemsSource="{Binding InteractLines}"
                                       HeaderText="{Binding InteractLines.Count, StringFormat='({0}) Interact Lines'}"
                                       AddItemCommandParameter="{Binding InteractLines}"
                                       Style="{StaticResource TalkLineListStyle}" />
                <controls:ListDataCard ItemsSource="{Binding DeathLines}"
                                       HeaderText="{Binding DeathLines.Count, StringFormat='({0}) Death Lines'}"
                                       AddItemCommandParameter="{Binding DeathLines}"
                                       Style="{StaticResource TalkLineListStyle}" />
                <controls:ListDataCard ItemsSource="{Binding HurtLines}"
                                       HeaderText="{Binding HurtLines.Count, StringFormat='({0}) Hurt Lines'}"
                                       AddItemCommandParameter="{Binding HurtLines}"
                                       Style="{StaticResource TalkLineListStyle}" />
                <controls:ListDataCard DataContext="{Binding TalkData}"
                                       ItemsSource="{Binding InitationDialogues}"
                                       HeaderText="{Binding InitationDialogues.Count, StringFormat='({0}) Initation Dialogues'}"
                                       AddItemCommand="{Binding DataContext.AddDialogueIdCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                       AddItemCommandParameter="{Binding InitationDialogues}">
                    <DataTemplate>
                        <controls:ResourcePicker VerticalAlignment="Center"
                                                 Resource="Dialogue"
                                                 EmptyText="Select initaition dialogue"
                                                 PickedId="{Binding .}" />
                    </DataTemplate>
                </controls:ListDataCard>
            </StackPanel>
        </ContentControl>
        <ContentControl ContentStringFormat="Living sound locations"
                        ContentTemplate="{DynamicResource ExpandableCardTemplate}">
            <StackPanel>
                <TextBox DataContext="{Binding Model}"
                         Text="{Binding DeathSoundLocation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Margin="5"
                         materialDesign:HintAssist.Hint="Death Sound Location"
                         Style="{DynamicResource MaterialDesignFloatingHintTextBox}" />
                <TextBox DataContext="{Binding Model}"
                         Text="{Binding HurtSoundLocation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Margin="5"
                         materialDesign:HintAssist.Hint="Hurt Sound Location"
                         Style="{DynamicResource MaterialDesignFloatingHintTextBox}" />
                <TextBox DataContext="{Binding Model}"
                         Text="{Binding AmbientSoundLocation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Margin="5"
                         materialDesign:HintAssist.Hint="Ambient Sound Location"
                         Style="{DynamicResource MaterialDesignFloatingHintTextBox}" />
            </StackPanel>
        </ContentControl>
    </StackPanel>
</UserControl>
