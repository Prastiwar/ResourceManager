<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:controls="clr-namespace:RPGDataEditor.Wpf.Controls"
                    xmlns:local="clr-namespace:RPGDataEditor.Wpf"
                    xmlns:behaviors="clr-namespace:RPGDataEditor.Wpf.Behaviors"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity">
    <ControlTemplate TargetType="{x:Type controls:DialogueOptionView}"
                     x:Key="DialogueOptionViewTemplate">
        <StackPanel x:Name="MainPanel">
            <StackPanel>
                <ComboBox x:Name="TypeComboBox"
                          materialDesign:HintAssist.Hint="Type"
                          HorizontalAlignment="Stretch"
                          HorizontalContentAlignment="Stretch"
                          SelectedIndex="2"
                          Margin="5"
                          Style="{DynamicResource MaterialDesignFloatingHintComboBox}">
                    <ComboBoxItem Name="Dialogue"
                                  Content="Dialogue" />
                    <ComboBoxItem Name="TriggerJob"
                                  Content="Trigger Job" />
                    <ComboBoxItem Name="Quit"
                                  Content="Quit" />
                </ComboBox>
                <controls:ResourcePicker x:Name="DialogueOptionPanel"
                                         Resource="Dialogue"
                                         PickedId="{Binding NextDialogId, Mode=TwoWay}"
                                         Margin="5"
                                         Visibility="Collapsed" />
                <!-- TODO: Review if this view should know that it belongs to only "Options" member name -->
                <TextBox Text="{Binding Message, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Margin="5"
                         local:AttachProperties.ValidablePathFormat="Options[{0}]"
                         materialDesign:HintAssist.Hint="Message"
                         Style="{DynamicResource MaterialDesignFloatingHintTextBox}">
                    <local:AttachProperties.ValidablePathValues>
                        <MultiBinding Converter="{StaticResource BindingListConverter}">
                            <Binding Path="(ItemsControl.AlternationIndex)"
                                     RelativeSource="{RelativeSource AncestorType={x:Type ListBoxItem}}" />
                        </MultiBinding>
                    </local:AttachProperties.ValidablePathValues>
                    <i:Interaction.Behaviors>
                        <behaviors:CatchValidationBehavior />
                    </i:Interaction.Behaviors>
                </TextBox>
                <TextBox Text="{Binding Command, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Margin="5"
                         materialDesign:HintAssist.Hint="Command"
                         Style="{DynamicResource MaterialDesignFloatingHintTextBox}">
                    <i:Interaction.Behaviors>
                        <behaviors:CatchValidationBehavior />
                    </i:Interaction.Behaviors>
                </TextBox>
            </StackPanel>
            <StackPanel Orientation="Horizontal"
                        Margin="5">
                <TextBlock Text="Color: "
                           VerticalAlignment="Top"
                           Margin="5,10,5,5" />
                <controls:MaterialColorPicker Margin="5"
                                              Color="{Binding Color, Mode=TwoWay, Converter={StaticResource HexDecColorConverter}}" />
            </StackPanel>
            <materialDesign:Card HorizontalAlignment="Stretch"
                                 HorizontalContentAlignment="Center"
                                 Margin="5"
                                 Padding="5">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <controls:ExpandButton ExpandableElement="{x:Reference RequirementsListView}" />
                        <Button x:Name="AddRequirementButton"
                                Style="{DynamicResource AddFlatButtonStyle}" />
                        <TextBlock Text="{Binding ItemsSource.Count, ElementName=RequirementsListView, StringFormat='({0}) Requirements'}"
                                   Margin="5" />
                    </StackPanel>
                    <ListView x:Name="RequirementsListView"
                              ItemsSource="{Binding Requirements}"
                              AlternationCount="{StaticResource MaxIntValue}"
                              HorizontalAlignment="Stretch"
                              HorizontalContentAlignment="Stretch">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <materialDesign:Card HorizontalAlignment="Stretch"
                                                     HorizontalContentAlignment="Center"
                                                     Padding="5">
                                    <Grid HorizontalAlignment="Stretch">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Button x:Name="RemoveButton"
                                                VerticalAlignment="Top"
                                                Margin="0,12,0,0"
                                                Style="{StaticResource DeleteFlatButtonStyle}"/>
                                        <!-- TODO: Review if this view should know that it belongs to only "Options" member name -->
                                        <controls:RequirementView x:Name="RequirementView"
                                                                  Grid.Column="1"
                                                                  DataContext="{Binding .}"
                                                                  local:AttachProperties.ValidablePathFormat="Options[{0}].Requirements[{1}]"
                                                                  local:AttachProperties.ValidableObject="{Binding DataContext, ElementName=RequirementsListView}"
                                                                  HorizontalAlignment="Stretch"
                                                                  HorizontalContentAlignment="Stretch">
                                            <local:AttachProperties.ValidablePathValues>
                                                <MultiBinding Converter="{StaticResource BindingListConverter}">
                                                    <Binding Path="(ItemsControl.AlternationIndex)"
                                                             RelativeSource="{RelativeSource AncestorType={x:Type ListBoxItem}, AncestorLevel=2}" />
                                                    <Binding Path="(ItemsControl.AlternationIndex)"
                                                             RelativeSource="{RelativeSource AncestorType={x:Type ListBoxItem}}" />
                                                </MultiBinding>
                                            </local:AttachProperties.ValidablePathValues>
                                        </controls:RequirementView>
                                    </Grid>
                                </materialDesign:Card>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </StackPanel>
            </materialDesign:Card>
        </StackPanel>
    </ControlTemplate>
    <Style TargetType="{x:Type controls:DialogueOptionView}">
        <Setter Property="Template"
                Value="{StaticResource DialogueOptionViewTemplate}" />
    </Style>
</ResourceDictionary>